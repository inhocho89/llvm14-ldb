diff -Naur memcached-1.6.19/memcached.c memcached-1.6.19-ldb2/memcached.c
--- memcached-1.6.19/memcached.c	2023-03-08 21:34:27.000000000 +0000
+++ memcached-1.6.19-ldb2/memcached.c	2023-03-13 17:25:57.584849942 +0000
@@ -62,6 +62,8 @@
 #include <sys/sysctl.h>
 #endif
 
+#include "ldb/tag.h"
+
 /*
  * forward declarations
  */
@@ -3148,6 +3150,7 @@
             /* Only process nreqs at a time to avoid starving other
                connections */
 
+	    ldb_tag_clear();
             --nreqs;
             if (nreqs >= 0) {
                 reset_cmd_handler(c);
@@ -3361,6 +3364,7 @@
             break;
 
         case conn_closing:
+	    ldb_tag_clear();
             if (IS_UDP(c->transport))
                 conn_cleanup(c);
             else
diff -Naur memcached-1.6.19/proto_bin.c memcached-1.6.19-ldb2/proto_bin.c
--- memcached-1.6.19/proto_bin.c	2023-03-08 21:34:27.000000000 +0000
+++ memcached-1.6.19-ldb2/proto_bin.c	2023-03-13 17:26:07.864877768 +0000
@@ -13,6 +13,8 @@
 #include <string.h>
 #include <stdlib.h>
 
+#include "ldb/tag.h"
+
 /** binprot handlers **/
 static void process_bin_flush(conn *c, char *extbuf);
 static void process_bin_append_prepend(conn *c);
@@ -77,6 +79,8 @@
         c->binary_header.request.bodylen = ntohl(req->request.bodylen);
         c->binary_header.request.cas = ntohll(req->request.cas);
 
+	ldb_tag_set(ntohl(req->request.opaque));
+
         if (c->binary_header.request.magic != PROTOCOL_BINARY_REQ) {
             if (settings.verbose) {
                 fprintf(stderr, "Invalid magic:  %x\n",
